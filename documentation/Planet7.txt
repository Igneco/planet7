
Reconciling your way out of trouble

Pre-release reconciliation is an easy get-out-of-jail free card, to make sure you aren't about to release unexpected features into the wild. Politically, it is a great way to cover your most vulnerable of assets, that upon which you sit.

The premise is simple: any system converts inputs to outputs. For the same set of inputs (e.g. a day's production events) your pre-release system and the production system should generate exactly the same results *except* for the new features you are about to release.

In practice, you need to think a little bit harder. You probably know how to pump lots of data into your system, but collecting and correlating the outputs from two deployed versions of your code can prove harder. What you really want is something that tells you which fields changed, by counting how many times they were different. You can then ignore the fields you expected to change (new fields, changed meanings, new static data, etc) and focus on the aberrations.

Your outputs may be in the form of XML, JSON, Excel, CSV, or some other format. How do you diff an Excel document in a meaningful way?

Enter Planet7.
